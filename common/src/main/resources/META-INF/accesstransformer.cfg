# Fields
public net.minecraft.client.renderer.RenderStateShard TRANSLUCENT_TRANSPARENCY
public net.minecraft.client.renderer.RenderStateShard NO_CULL
public net.minecraft.client.renderer.RenderStateShard OVERLAY

# Methods
public net.minecraft.core.particles.SimpleParticleType <init>(Z)V
public net.minecraft.client.particle.SuspendedParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/client/particle/SpriteSet;DDDDDD)V # SuspendedParticle
public net.minecraft.world.level.block.BaseFireBlock canBurn(Lnet/minecraft/world/level/block/state/BlockState;)Z # canBurn
public net.minecraft.world.level.block.SoulFireBlock canBurn(Lnet/minecraft/world/level/block/state/BlockState;)Z # canBurn
public net.minecraft.world.level.block.FireBlock canBurn(Lnet/minecraft/world/level/block/state/BlockState;)Z # canBurn
public net.minecraft.world.level.block.AbstractCandleBlock getParticleOffsets(Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; # getParticleOffsets
public net.minecraft.world.level.block.CandleBlock getParticleOffsets(Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; # getParticleOffsets
public net.minecraft.world.level.block.CandleCakeBlock getParticleOffsets(Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; # getParticleOffsets
public net.minecraft.client.particle.ParticleEngine clearParticles()V
public net.minecraft.client.particle.DripParticle getType()Lnet/minecraft/world/level/material/Fluid;
public net.minecraft.client.particle.BubbleParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V
public net.minecraft.client.particle.BubblePopParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V
public net.minecraft.client.particle.SplashParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V
public net.minecraft.client.particle.FlyTowardsPositionParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V
public net.minecraft.client.particle.ParticleEngine$MutableSpriteSet <init>()V
public net.minecraft.client.particle.DripParticle$FallAndLandParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/particles/ParticleOptions;)V
public net.minecraft.client.renderer.RenderType$CompositeState <init>(Lnet/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard;Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;Lnet/minecraft/client/renderer/RenderStateShard$DepthTestStateShard;Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;Lnet/minecraft/client/renderer/RenderStateShard$OutputStateShard;Lnet/minecraft/client/renderer/RenderStateShard$TexturingStateShard;Lnet/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard;Lnet/minecraft/client/renderer/RenderStateShard$LineStateShard;Lnet/minecraft/client/renderer/RenderStateShard$ColorLogicStateShard;Lnet/minecraft/client/renderer/RenderType$OutlineProperty;)V
public net.minecraft.client.renderer.RenderType create(Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;

# Class
public net.minecraft.client.particle.ParticleEngine$MutableSpriteSet
public net.minecraft.client.particle.ParticleEngine$SpriteParticleRegistration
public net.minecraft.client.particle.DripParticle$FallAndLandParticle
public net.minecraft.client.renderer.RenderType$CompositeState
public net.minecraft.client.renderer.RenderStateShard$ShaderStateShard
public net.minecraft.client.renderer.RenderStateShard$TextureStateShard
